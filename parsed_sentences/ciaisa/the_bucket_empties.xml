<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE grammar SYSTEM "tulipa-parses.dtd,xml">
<grammar>
  <entry name="the bucket empties_0_derivedTree">
    <trace>
      <class>Determiner_32--the1--0</class>
      <class>Commonnoun_33--bucket2--0</class>
      <class>RegularVerbFamily_1--empties3--1</class>
    </trace>
    <family/>
    <tree>
      <node type="std">
        <narg>
          <fs>
            <f name="cat">
              <sym value="s"/>
            </f>
          </fs>
        </narg>
        <node type="std">
          <narg>
            <fs>
              <f name="cat">
                <sym value="np"/>
              </f>
              <f name="i">
                <sym varname="D0"/>
              </f>
            </fs>
          </narg>
          <node type="std">
            <narg>
              <fs coref="A0">
                <ctype/>
                <f name="cat">
                  <sym value="det"/>
                </f>
              </fs>
            </narg>
            <node type="lex" value="the">
              <narg>
                <fs>
                  <f name="cat">
                    <sym value="the"/>
                  </f>
                </fs>
              </narg>
            </node>
          </node>
          <node type="std">
            <narg>
              <fs>
                <f name="cat">
                  <sym value="np"/>
                </f>
                <f name="i">
                  <sym varname="D0"/>
                </f>
              </fs>
            </narg>
            <node type="std">
              <narg>
                <fs coref="B0">
                  <ctype/>
                  <f name="cat">
                    <sym value="n"/>
                  </f>
                  <f name="i">
                    <sym varname="D0"/>
                  </f>
                </fs>
              </narg>
              <node type="lex" value="bucket">
                <narg>
                  <fs>
                    <f name="cat">
                      <sym value="bucket"/>
                    </f>
                  </fs>
                </narg>
              </node>
            </node>
          </node>
        </node>
        <node type="std">
          <narg>
            <fs>
              <f name="cat">
                <sym value="vp"/>
              </f>
              <f name="e">
                <sym varname="E0"/>
              </f>
            </fs>
          </narg>
          <node type="std">
            <narg>
              <fs coref="C0">
                <ctype/>
                <f name="cat">
                  <sym value="v"/>
                </f>
                <f name="e">
                  <sym varname="E0"/>
                </f>
              </fs>
            </narg>
            <node type="lex" value="empties">
              <narg>
                <fs>
                  <f name="cat">
                    <sym value="empties"/>
                  </f>
                </fs>
              </narg>
            </node>
          </node>
        </node>
      </node>
    </tree>
    <frame>
      <fs coref="E0">
        <ctype>
          <type val="simple_event"/>
          <type val="event"/>
          <type val="change_of_state"/>
          <type val="becoming_empty"/>
        </ctype>
        <f name="result">
          <fs coref="F0">
            <ctype>
              <type val="being_empty"/>
              <type val="state"/>
            </ctype>
            <f name="theme">
              <fs coref="D0">
                <ctype>
                  <type val="bucket"/>
                  <type val="container"/>
                  <type val="inedible"/>
                  <type val="physical_object"/>
                  <type val="inanimate"/>
                  <type val="entity"/>
                </ctype>
              </fs>
            </f>
          </fs>
        </f>
        <f name="theme">
          <sym varname="D0"/>
        </f>
        <f name="undergoer">
          <sym varname="D0"/>
        </f>
      </fs>
    </frame>
  </entry>
</grammar>
